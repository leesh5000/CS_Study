def solution(inp_str):
    answer = []

    if not (8 <= len(inp_str) <= 15):
        answer.append(1)

    for c in inp_str:
        if not (('A' <= c <= 'Z') or ('a' <= c <= 'z') or ('0' <= c <= '9') or (c in '~!@#$%^&*')):
            answer.append(2)
            break

    cnt = 0
    for c in inp_str:
        if 'A' <= c <= 'Z':
            cnt += 1
            break
    for c in inp_str:
        if 'a' <= c <= 'z':
            cnt += 1
            break
    for c in inp_str:
        if '0' <= c <= '9':
            cnt += 1
            break
    for c in inp_str:
        if (c in '~!@#$%^&*'):
            cnt += 1
            break
    if cnt < 3:
        answer.append(3)

    cnt = 0
    prev = ''
    for c in inp_str:
        if prev == '':
            prev = c
            cnt = 1
        else:
            if c == prev:
                cnt += 1
            else:
                prev = c
                cnt = 1
        if cnt >= 4:
            answer.append(4)
            break

    d = dict()
    for c in inp_str:
        if d.get(c) == None:
            d[c] = 1
        else:
            d[c] += 1
    for key, value in d.items():
        if value >= 5:
            answer.append(5)
            break

    if len(answer) == 0:
        answer.append(0)

    print(answer)

    return answer


print(solution(inp_str))


from collections import deque

enter = [1, 2, 3, 4, 5]
leave = [5, 4, 3, 2, 1]


def solution(enter, leave):
    answer = []

    leave = deque(leave)

    room = []
    d = dict()
    for i in range(len(enter)):
        # d[enter[i]] = []
        d[enter[i]] = 0
        room.append(enter[i])
        for person in room:
            if enter[i] != person:
                # d[enter[i]].append(person)
                # d[person].append(enter[i])
                d[enter[i]] += 1
                d[person] += 1

        while leave and (leave[0] in room):
            room.remove(leave[0])
            leave.popleft()

    answer = list(dict(sorted(d.items(), key=lambda x: x[0])).values())

    return answer


print(solution(enter, leave))


